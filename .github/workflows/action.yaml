name: Build and deploy action
on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - '**/tests/**'
env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  NAME_APP: ${{secrets.NAME_APP}}
  VK_OAUTH2_KEY : ${{secrets.VK_OAUTH2_KEY}}
  VK_OAUTH2_SECRET : ${{secrets.VK_OAUTH2_SECRET}}
  TELEGRAM_TOKEN_BOT: ${{secrets.TELEGRAM_TOKEN_BOT}}


jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.0-alpine
        env:
          POSTGRES_PASSWORD: a73147b7f8a246965a699b4df153
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          pip install poetry==1.1.5
          cd myappcalendar/django-package
          poetry install
      - name: Run tests
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: a73147b7f8a246965a699b4df153
        run: |
          ls -lav
          cd myappcalendar/django-package
          ls -lav
          poetry run sh -c "cd myappcalendar && pytest . -vv"