name: Build and deploy action
on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - '**/tests/**'
      - '**action.yaml'
env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  NAME_APP: ${{secrets.NAME_APP}}
  VK_OAUTH2_KEY : ${{secrets.VK_OAUTH2_KEY}}
  VK_OAUTH2_SECRET : ${{secrets.VK_OAUTH2_SECRET}}
  TELEGRAM_TOKEN_BOT: ${{secrets.TELEGRAM_TOKEN_BOT}}


jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.0-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: a73147b7f8a246965a699b4df153
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          pip install poetry
          cd myappcalendar/django-package
          poetry install
      - name: Run tests
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: a73147b7f8a246965a699b4df153
        run: |
          cd myappcalendar/django-package
          poetry run sh -c "cd .. && pytest tests/goals/ tests/users/ -vv -k 'not testit'"
  build_and_push:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: Echo gitHubname and repo
        run: echo ${{ github.repository }}/${{ github.ref_name }}/${{secrets.NAME_APP}}
      - name: 'render .env file'
        run: |
          cat ci.env | envsubst > myappcalendar/.env
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./myappcalendar
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{secrets.NAME_APP}}:${{ github.ref_name }}-version-${{ github.run_id }}
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: $SSH_USERNAME
          password: $SSH_PASSWORD
          source: "deploy/docker-compose.yaml"
          target: ${{secrets.NAME_APP}}
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: $SSH_USERNAME
          password: $SSH_PASSWORD
          script: |
            echo homepath $HOME
            cd ${{secrets.NAME_APP}}
            echo ${{ env.SSH_PASSWORD }} | sudo -S docker-compose down --rmi local -v
            echo ${{ env.SSH_PASSWORD }} | sudo -S docker-compose -f docker-compose.yaml --project-name ${{ env.NAME_APP }} up --detach --timeout 120