version: "3.9"
services:
  api:
    #myappcalendar
    container_name: api
    image: dalred/$NAME_APP:$GITHUB_REF_NAME-version-$GITHUB_RUN_ID
    ports:
      - "8000:8000"
#    volumes:
#      - ./$NAME_APP:/code/
    depends_on:
      db:
        condition: service_healthy
    command: /bin/bash -c "./runserver.sh"
  bot:
    image: dalred/$NAME_APP:$GITHUB_REF_NAME-version-$GITHUB_RUN_ID
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    command:
      - bash
      - -c
      - |
        python manage.py runbot
  frontend:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "80:80"
    depends_on:
      - api
  db:
    container_name: postgres_$NAME_APP
    image: postgres:12.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $DB_NAME -U $DB_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
volumes:
  postgres_data:


